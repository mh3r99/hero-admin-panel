{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["useHttp","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","heroesSlice","createSlice","name","reducers","heroCreated","state","action","addOne","payload","heroDeleted","removeOne","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","heroes","filteredHeroesSelector","createSelector","filters","activeFilter","filter","item","element","heroesFetching","heroesFetched","heroesFetchingError","HeroesListItem","elementClassName","description","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroes","useSelector","dispatch","useDispatch","useEffect","useCallback","id","then","console","log","catch","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","filtersAdapter","filtersLoadingStatus","fetchFilters","filtersSlice","filtersChanged","filtersFetching","filtersFetched","filtersFetchingError","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","getState","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","HeroesFilters","btnClass","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b24abf8.chunk.js","sourcesContent":["export const useHttp = () => {\r\n\r\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        } catch(e) {\r\n            throw e;\r\n        }\r\n    };\r\n\r\n    return {request}\r\n}","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\r\nimport {useHttp} from '../../hooks/http.hook';\r\n\r\nconst heroesAdapter = createEntityAdapter();\r\n\r\nconst initialState = heroesAdapter.getInitialState({\r\n    heroesLoadingStatus: 'idle'\r\n});\r\n\r\nexport const fetchHeroes = createAsyncThunk(\r\n    'heroes/fetchHeroes',\r\n    async () => {\r\n        const {request} = useHttp();\r\n        return await request(\"http://localhost:3001/heroes\");\r\n    }\r\n);\r\n\r\nconst heroesSlice = createSlice({\r\n    name: 'heroes',\r\n    initialState,\r\n    reducers: {\r\n        heroCreated: (state, action) => {\r\n            heroesAdapter.addOne(state, action.payload);\r\n        },\r\n        heroDeleted: (state, action) => {\r\n            heroesAdapter.removeOne(state, action.payload);\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchHeroes.pending, state => {state.heroesLoadingStatus = 'loading'})\r\n            .addCase(fetchHeroes.fulfilled, (state, action) => {\r\n                state.heroesLoadingStatus = 'idle';\r\n                heroesAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(fetchHeroes.rejected, state => {\r\n                state.heroesLoadingStatus = 'error';\r\n            })\r\n            .addDefaultCase(() => {})\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = heroesSlice;\r\n\r\nexport default reducer;\r\n\r\nconst {selectAll} = heroesAdapter.getSelectors(state => state.heroes);\r\n\r\nexport const filteredHeroesSelector = createSelector(\r\n    (state) => state.filters.activeFilter,\r\n    selectAll,\r\n    (filter, heroes) => {\r\n        if (filter === 'all') {\r\n            return heroes;\r\n        } else {\r\n            return heroes.filter(item => item.element === filter);\r\n        }\r\n    }\r\n);\r\n\r\nexport const {\r\n    heroesFetching,\r\n    heroesFetched,\r\n    heroesFetchingError,\r\n    heroCreated,\r\n    heroDeleted\r\n} = actions;","\r\nconst HeroesListItem = ({name, description, element, onDelete}) => {\r\n\r\n    let elementClassName;\r\n\r\n    switch (element) {\r\n        case 'fire':\r\n            elementClassName = 'bg-danger bg-gradient';\r\n            break;\r\n        case 'water':\r\n            elementClassName = 'bg-primary bg-gradient';\r\n            break;\r\n        case 'wind':\r\n            elementClassName = 'bg-success bg-gradient';\r\n            break;\r\n        case 'earth':\r\n            elementClassName = 'bg-secondary bg-gradient';\r\n            break;\r\n        default:\r\n            elementClassName = 'bg-warning bg-gradient';\r\n    }\r\n\r\n    return (\r\n        <li \r\n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\r\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \r\n                 className=\"img-fluid w-25 d-inline\" \r\n                 alt=\"unknown hero\" \r\n                 style={{'objectFit': 'cover'}}/>\r\n            <div className=\"card-body\">\r\n                \r\n                <h3 className=\"card-title\">{name}</h3>\r\n                <p className=\"card-text\">{description}</p>\r\n            </div>\r\n            <span onClick={onDelete} \r\n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\r\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\r\n            </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default HeroesListItem;","\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\r\nimport { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nimport { heroDeleted, fetchHeroes, filteredHeroesSelector } from './heroesSlice';\r\n\r\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nimport './heroesList.scss';\r\n\r\nconst HeroesList = () => {\r\n    const filteredHeroes = useSelector(filteredHeroesSelector);\r\n    const heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\r\n    const dispatch = useDispatch();\r\n    const {request} = useHttp();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchHeroes());\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const onDelete = useCallback((id) => {\r\n        request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\r\n            .then(data => console.log(data, 'Deleted'))\r\n            .then(dispatch(heroDeleted(id)))\r\n            .catch(err => console.log(err));\r\n        // eslint-disable-next-line  \r\n    }, [request]);\r\n\r\n    if (heroesLoadingStatus === \"loading\") {\r\n        return <Spinner/>;\r\n    } else if (heroesLoadingStatus === \"error\") {\r\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\r\n    }\r\n\r\n    const renderHeroesList = (arr) => {\r\n        if (arr.length === 0) {\r\n            return (\r\n                <CSSTransition\r\n                    timeout={0}\r\n                    classNames=\"hero\">\r\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\r\n                </CSSTransition>\r\n            )\r\n        }\r\n\r\n        return arr.map(({id, ...props}) => {\r\n            return (\r\n                <CSSTransition \r\n                    key={id}\r\n                    timeout={500}\r\n                    classNames=\"hero\">\r\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)}/>\r\n                </CSSTransition>\r\n            )\r\n        })\r\n    }\r\n\r\n    const elements = renderHeroesList(filteredHeroes);\r\n    return (\r\n        <TransitionGroup component=\"ul\">\r\n            {elements}\r\n        </TransitionGroup>\r\n    )\r\n}\r\n\r\nexport default HeroesList;","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport {useHttp} from '../../hooks/http.hook';\r\n\r\nconst filtersAdapter = createEntityAdapter();\r\n\r\nconst initialState = filtersAdapter.getInitialState({\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n});\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'filters/fetchFilters',\r\n    async () => {\r\n        const {request} = useHttp();\r\n        return await request(\"http://localhost:3001/filters\");\r\n    }\r\n);\r\n\r\nconst filtersSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        filtersChanged: (state, action) => {\r\n            state.activeFilter = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'})\r\n            .addCase(fetchFilters.fulfilled, (state, action) => {\r\n                state.filtersLoadingStatus = 'idle';\r\n                filtersAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(fetchFilters.rejected, state => {\r\n                state.filtersLoadingStatus = 'error';\r\n            })\r\n            .addDefaultCase(() => {})\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = filtersSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {selectAll} = filtersAdapter.getSelectors(state => state.filters);\r\n\r\nexport const {\r\n    filtersFetching,\r\n    filtersFetched,\r\n    filtersFetchingError,\r\n    filtersChanged\r\n} = actions;","import { configureStore } from '@reduxjs/toolkit';\r\nimport heroes from '../components/heroesList/heroesSlice';\r\nimport filters from '../components/heroesFilters/filtersSlice';\r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    if (typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        })\r\n    }\r\n    return next(action)\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {heroes, filters},\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n})\r\n\r\nexport default store;\r\n","import {useHttp} from '../../hooks/http.hook';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport store from '../../store';\r\n\r\nimport { selectAll } from '../heroesFilters/filtersSlice';\r\nimport { heroCreated } from '../heroesList/heroesSlice';\r\n\r\nconst HeroesAddForm = () => {\r\n    const [heroName, setHeroName] = useState('');\r\n    const [heroDescr, setHeroDescr] = useState('');\r\n    const [heroElement, setHeroElement] = useState('');\r\n\r\n    const {filtersLoadingStatus} = useSelector(state => state.filters);\r\n    const filters = selectAll(store.getState());\r\n    const dispatch = useDispatch();\r\n    const {request} = useHttp();\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const newHero = {\r\n            id: uuidv4(),\r\n            name: heroName,\r\n            description: heroDescr,\r\n            element: heroElement\r\n        }\r\n\r\n        request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\r\n            .then(res => console.log(res, 'Отправка успешна'))\r\n            .then(dispatch(heroCreated(newHero)))\r\n            .catch(err => console.log(err));\r\n\r\n        setHeroName('');\r\n        setHeroDescr('');\r\n        setHeroElement('');\r\n    }\r\n\r\n    const renderFilters = (filters, status) => {\r\n        if (status === \"loading\") {\r\n            return <option>Загрузка элементов</option>\r\n        } else if (status === \"error\") {\r\n            return <option>Ошибка загрузки</option>\r\n        }\r\n        \r\n        if (filters && filters.length > 0 ) {\r\n            return filters.map(({name, label}) => {\r\n                // eslint-disable-next-line\r\n                if (name === 'all')  return;\r\n\r\n                return <option key={name} value={name}>{label}</option>\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\r\n                <input \r\n                    required\r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    className=\"form-control\" \r\n                    id=\"name\" \r\n                    placeholder=\"Как меня зовут?\"\r\n                    value={heroName}\r\n                    onChange={(e) => setHeroName(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\r\n                <textarea\r\n                    required\r\n                    name=\"text\" \r\n                    className=\"form-control\" \r\n                    id=\"text\" \r\n                    placeholder=\"Что я умею?\"\r\n                    style={{\"height\": '130px'}}\r\n                    value={heroDescr}\r\n                    onChange={(e) => setHeroDescr(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\r\n                <select \r\n                    required\r\n                    className=\"form-select\" \r\n                    id=\"element\" \r\n                    name=\"element\"\r\n                    value={heroElement}\r\n                    onChange={(e) => setHeroElement(e.target.value)}>\r\n                    <option value=\"\">Я владею элементом...</option>\r\n                    {renderFilters(filters, filtersLoadingStatus)}\r\n                </select>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default HeroesAddForm;","import {useHttp} from '../../hooks/http.hook';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport store from '../../store';\r\n\r\nimport { filtersChanged, fetchFilters, selectAll } from './filtersSlice';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nconst HeroesFilters = () => {\r\n\r\n    const {filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\r\n    const filters = selectAll(store.getState());\r\n    const dispatch = useDispatch();\r\n    const {request} = useHttp();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFilters(request));\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (filtersLoadingStatus === \"loading\") {\r\n        return <Spinner/>;\r\n    } else if (filtersLoadingStatus === \"error\") {\r\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\r\n    }\r\n\r\n    const renderFilters = (arr) => {\r\n        if (arr.length === 0) {\r\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\r\n        }\r\n\r\n        return arr.map(({name, className, label}) => {\r\n\r\n            const btnClass = classNames('btn', className, {\r\n                'active': name === activeFilter\r\n            });\r\n            \r\n            return <button \r\n                        key={name} \r\n                        id={name} \r\n                        className={btnClass}\r\n                        onClick={() => dispatch(filtersChanged(name))}\r\n                        >{label}</button>\r\n        })\r\n    }\r\n\r\n    const elements = renderFilters(filters);\r\n\r\n    return (\r\n        <div className=\"card shadow-lg mt-4\">\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\r\n                <div className=\"btn-group\">\r\n                    {elements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\r\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\r\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\r\n\r\nimport './app.scss';\r\n\r\nconst App = () => {\r\n    \r\n    return (\r\n        <main className=\"app\">\r\n            <div className=\"content\">\r\n                <HeroesList/>\r\n                <div className=\"content__interactive\">\r\n                    <HeroesAddForm/>\r\n                    <HeroesFilters/>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/app/App';\r\nimport store from './store';\r\n\r\nimport './styles/index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}